//#include <dt-bindings/zmk/mouse.h>

#include <behaviors/rgbled_widget.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define MOUSE 4
#define SCROLL 1

// スクロール量の設定

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
    behaviors {
        // スクロール用のbehaviorの設定

        scroll_down_up: sensor_rotate_mouse_wheel {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>; // スクロールのタップ時間
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt RCTL LANG2>, <&mo RAISE>, <&mo MOUSE>;
        };

        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt LCTL LANG1>, <&mo RAISE>, <&mo 5>;
        };
    };
};

&sl { release-after-ms = <250>; }; // time needed for double click (for mkp_exit_AML)
/ {
    macros {
        // When in AML, move to default layer when key (except mouse button) pressed

        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to BASE &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_layer_0";
        };

        // When LCLK pressed, exit AML (after 250ms cause by sticky layer)

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl MOUSE>;

            label = "MKP_EXIT_AML";
        };

        // Support swapping into Scroll layer when AML is activated

        to_scroll_layer: to_scroll_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&to SCROLL>,
                <&macro_press>,
                <&mo SCROLL>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo SCROLL>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "Base";
            sensor-bindings = <&scroll_down_up>;
            bindings = <
&kp N1     &kp N2  &kp N3      &kp N4        &kp N5              &kp N6                        &kp N7         &kp N8       &kp N9  &kp N0     &kp MINUS  &kp EQUAL
&kp GRAVE  &kp Q   &kp W       &kp E         &kp R               &kp T                         &kp Y          &kp U        &kp I   &kp O      &kp P      &kp BACKSLASH
&kp TAB    &kp A   &kp S       &kp D         &kp F               &kp G        &kp LA(SPACE)    &lt 3 LBKT     &kp H        &kp J   &kp K      &kp L      &kp SEMI       &kp SQT
&kp LSHFT  &kp Z   &kp X       &kp C         &kp V               &kp B        &kp GRAVE        &lt 1 RBKT     &kp N        &kp M   &kp COMMA  &kp DOT    &kp FSLH       &kp RSHFT
&kp LCTRL          &kp C_MUTE  &kp LEFT_ALT  &mt LGUI LG(SPACE)  &lt 4 SPACE  &lt 1 LG(SPACE)  &kp BACKSPACE  &lt 2 ENTER                                &lt 4 RCTRL
            >;
        };

        lower_layer {
            display-name = "Lower";
            sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
            bindings = <
&kp F1  &kp F2   &kp F3     &kp F4    &kp F5     &kp F6               &kp F7      &kp F8        &kp F9      &kp F10        &kp KP_SLASH     &kp KP_NUMLOCK
&trans  &kp F6   &kp F7     &kp F8    &kp F9     &kp F10              &kp LA(F1)  &kp LC(LEFT)  &kp LC(UP)  &kp LC(RIGHT)  &kp KP_MULTIPLY  &none
&trans  &kp F11  &kp F12    &kp UP    &none      &kp HOME  &kp PG_UP  &kp LPAR    &kp C_VOL_UP  &kp KP_N1   &kp LC(DOWN)   &kp KP_N3        &kp KP_MINUS    &none
&trans  &none    &kp LEFT   &kp DOWN  &kp RIGHT  &kp END   &kp PG_DN  &kp RPAR    &kp C_VOL_DN  &kp KP_DOT  &kp KP_N0      &kp KP_EQUAL     &kp KP_PLUS     &none
&trans           &kp RSHFT  &trans    &trans     &trans    &trans     &trans      &kp DEL                                                   &studio_unlock
            >;
        };

        raise_layer {
            display-name = "Raise";
            sensor-bindings = <&inc_dec_kp LA(F2) LA(F1)>;
            bindings = <
&trans  &none  &none  &none      &none      &none                            &none      &none     &none   &none      &none  &none
&trans  &none  &none  &none      &none      &none                            &none      &kp LEFT  &kp UP  &kp RIGHT  &none  &none
&trans  &none  &none  &mkp RCLK  &mkp LCLK  &msc SCRL_UP    &msc SCRL_LEFT   &kp PG_UP  &kp HOME  &none   &kp DOWN   &none  &none   &none
&trans  &none  &none  &mkp MB4   &mkp MB5   &msc SCRL_DOWN  &msc SCRL_RIGHT  &kp PG_DN  &kp END   &none   &none      &none  &none   &none
&trans         &none  &trans     &trans     &trans          &trans           &trans     &kp DEL                             &trans
            >;
        };

        adjust_layer {
            display-name = "Adjust";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &bt BT_CLR_ALL  &none           &none  &none  &none  &none
&trans  &none         &none         &none         &none         &none                 &bt BT_CLR      &none           &none  &none  &none  &none
&trans  &none         &none         &none         &none         &none         &none   &ind_bat        &out OUT_TOG    &none  &none  &none  &none   &none
&trans  &none         &none         &none         &none         &none         &none   &ind_con        &studio_unlock  &none  &none  &none  &none   &none
&trans                &kp C_MUTE    &trans        &trans        &trans        &trans  &trans          &kp DEL                              &trans
            >;
        };

        mouse_layer {
            display-name = "Mouse";
            sensor-bindings = <&scroll_down_up>;
            bindings = <
&kp LC(N1)             &kp LC(N2)     &kp LC(N3)     &to_layer_0 N3  &to_layer_0 N4      &to_layer_0 N5                   &to_layer_0 N6  &to_layer_0 N7  &to_layer_0 N8  &to_layer_0 N9  &to_layer_0 N0  &to_layer_0 MINUS
&kp ESC                &none          &none          &none           &none               &none                            &none           &kp LEFT        &kp UP          &kp RIGHT       &none           &to_layer_0 EQUAL
&kp TAB                &to_layer_0 A  &mkp RCLK      &mkp MCLK       &mkp_exit_AML LCLK  &msc SCRL_UP    &msc SCRL_LEFT   &msc SCRL_LEFT  &mkp MB3        &mkp LCLK       &kp DOWN        &mkp RCLK       &to_layer_0 SINGLE_QUOTE  &to_layer_0 SEMICOLON
&kp LSHFT              &to_layer_0 Z  &to_layer_0 X  &mkp MB4        &mkp MB5            &msc SCRL_DOWN  &msc SCRL_RIGHT  &kp LC(LEFT)    &kp LC(RIGHT)   &kp LG(LBKT)    &mkp MB5        &kp LG(RBKT)    &none                     &kp RSHFT
&to_layer_0 BACKSLASH                 &trans         &trans          &trans              &trans          &trans           &kp LC(LEFT)    &kp LC(RIGHT)                                                   &trans
            >;
        };

        // Extra layer can be added in ZMK STUDIO

        extra1 { status = "reserved"; };

        extra2 { status = "reserved"; };
    };
};
